{%- macro ngx_site(name, ssl, content) %}
server {
    name {{ name }};
    listen {{ ssl | ternary(443, 80) }};
    {% if ssl -%}
    ssl on;
    {% endif %}

    {{ content | indent }}
}
{% endmacro -%}

{%- macro ngx_value(value) -%}
  {%- if value is sequence and value is not string -%}
    {{ value | sort | join(' ') }}
  {%- elif value is sameas true -%}
    on
  {%- elif value is sameas false -%}
    off
  {%- else -%}
    {{ value }}
  {%- endif -%}
{%- endmacro -%}

{%- macro ngx_directives(module) -%}
{% for directive, value in site[module].iteritems() -%}
{% if value is mapping %}
{% for key, subvalue in value.iteritems() %}
{{ module }}_{{ directive }} {{ key }} {{ ngx_value(subvalue) }};
{% endfor %}
{% else %}
{{ module }}_{{ directive }} {{ ngx_value(value) }};
{% endif %}
{%- endfor %}
{% endmacro -%}

{%- if site.server_name is string %}
  {%- set server_name = site.server_name -%}
{% else %}
  {%- set server_name -%}
    {{ site.server_name | sort | join(' ') }}
  {%- endset -%}
{% endif -%}

{% if site.ssl.mode is not defined or site.ssl.mode == "required" -%}
{{ ngx_site(server_name, false, 'return 301 https://$http_host$request_uri;') }}

{%- set content -%}

{%- if site.gzip is defined -%}
  gzip {{ ngx_value(site.gzip) }};
{% endif %}

{{ ngx_directives('proxy') }}
{%- endset -%}
{{ ngx_site(server_name, true, content) }}
{%- endif %}

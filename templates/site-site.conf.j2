{# server block #}
{%- macro ngx_site(server_name, ssl, content) %}
server {
    server_name {{ server_name }};
    listen {{ ssl | ternary(443, 80) }};
    {% if ssl -%}
    ssl on;
    {% endif %}

    {{ content | indent }}
}
{% endmacro -%}

{# format directive value as array, boolean, or literal #}
{%- macro ngx_value(value) -%}
  {%- if value is sequence and value is not string -%}
    {{ value | sort | join(' ') }}
  {%- elif value is sameas true -%}
    on
  {%- elif value is sameas false -%}
    off
  {%- else -%}
    {{ value }}
  {%- endif -%}
{%- endmacro -%}

{# redirect to a given host #}
{%- macro ngx_permanent_redirect(ssl, host) -%}
return 301 {{ ssl | ternary('https', 'http') }}://{{ host }}$request_uri;
{%- endmacro -%}

{%- macro ngx_directives(module) -%}
{% for directive, value in site[module].iteritems() -%}
{% if value is mapping %}
{% for key, subvalue in value.iteritems() %}
{{ module }}_{{ directive }} {{ key }} {{ ngx_value(subvalue) }};
{% endfor %}
{% else %}
{{ module }}_{{ directive }} {{ ngx_value(value) }};
{% endif %}
{%- endfor %}
{% endmacro -%}

{%- set use_ssl = site.ssl.enabled is not defined or site.ssl.enabled -%}

{# redirects from other domains to the primary domain #}
{% if site.redirect_from is defined %}
{% set other_names -%}
  {{ site.redirect_from | sort | join(' ') }}
{%- endset -%}

{# redirect to the primary domain (plaintext) #}
{% if use_ssl %}
{{ ngx_site(other_names, false, ngx_permanent_redirect(true, site.names[0])) }}{{ '\n' }}
{%- endif -%}

{# redirect to the primary domain #}
{{ ngx_site(other_names, use_ssl, ngx_permanent_redirect(true, site.names[0])) }}
{% endif %}

{%- set server_name -%}
  {{ site.names | sort | join(' ') }}
{%- endset -%}

{# redirect from plaintext to SSL #}
{% if use_ssl %}
{{ ngx_site(server_name, false, ngx_permanent_redirect(true, '$http_host')) }}
{%- endif %}

{%- set content -%}

{% if site.client_max_body_size is defined -%}
  client_max_body_size {{ site.client_max_body_size }};
{% endif %}

{% if site.gzip is defined -%}
  gzip {{ ngx_value(site.gzip) }};
{% endif %}

{{ ngx_directives('proxy') }}
{%- endset %}

{{ ngx_site(server_name, site.ssl.enabled, content) }}

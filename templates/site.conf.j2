{% import 'libnginx.j2' as ngx with context -%}

{%  macro primary_name() %}
{%    if site.settings.server.server_name is string %}
{%      set n = site.settings.server.server_name %}
{%    else %}{# is sequence #}
{%      set n = site.settings.server.server_name[0] %}
{%    endif %}
{%    if n[0] == '.' %}
{{      n | replace('.', '', 1) }}
{%-   else %}
{{      n }}
{%-   endif %}
{%  endmacro -%}

{{ ngx.bulk_directives( site.settings.http | default({})) }}
{{ '\n' }}

{%- for _map in site.settings.http.maps | default([]) %}
{{    ngx.map_block(_map) ~ '\n' }}
{%  endfor -%}

{%- if site.redirect_from is defined %}
{%    for ssl in [false, site.settings.server.ssl | default(true)] | unique %}
{{      ('Redirect to the primary domain, ' ~ ssl | ternary('SSL', 'plain')) | comment }}
{%      set content %}
{{        ngx.directive('listen', ssl | ternary(443, 80)) }}
{{        ngx.directive('server_name', site.redirect_from) }}
{%        if ssl %}
{{          ngx.directive('ssl', true) }}
{%        endif %}
{{        ngx.redirect(host = primary_name(), ssl = true) }}
{%-     endset %}
{{      ngx.block('server', content) ~ '\n' }}
{%    endfor %}
{%  endif -%}

{%- if site.settings.server.ssl | default(true) %}
{{    'Redirect from non-SSL to SSL' | comment }}
{%    set content %}
{{      ngx.directive('listen', 80) }}
{{      ngx.directive('server_name', site.settings.server.server_name) }}
{{      ngx.redirect(host = primary_name(), ssl = true) }}
{%-   endset %}
{{    ngx.block('server', content) ~ '\n' }}
{%  endif -%}

{%- set content %}
{{    ngx.bulk_directives(site.settings.server | default({})) }}
{%-   for if_block in site.settings.server.ifs | default([]) %}
{{      '\n\n' ~ ngx.block(['if', '(%s)' | format(if_block.if)], ngx.bulk_directives(if_block)) }}
{%-   endfor %}
{%-   for location in site.settings.server.locations | default([]) %}
{{      '\n\n' ~ ngx.locations(location) }}
{%-   endfor %}
{%  endset -%}

{{ ngx.block('server', content) }}

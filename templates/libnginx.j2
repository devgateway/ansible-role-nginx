{%  macro directive(directive, my_args = [], my_kwargs = {}) %}
{%    if my_args is string or my_args is not sequence %}
{%      set my_args = [my_args] %}
{%    endif %}
{{    directive }}
{%-   for arg in my_args %}
{%      if arg is sameas true %}
{%        set arg = 'on' %}
{%      elif arg is sameas false %}
{%        set arg = 'off' %}
{%      else %}
{%        if arg is string and ' ' in arg %}
{%          set arg = arg | quote %}
{%        endif %}
{%      endif %}
{{      ' ' }}{{ arg }}
{%-   endfor %}
{%    for key, val in my_kwargs | dictsort %}
{%-     if val is sameas true %}
{{        ' ' }}{{ key }}
{%-     elif val is sequence and val is not string %}
{{        ' ' }}{{ key }}={{ val | join(':') }}
{%-     elif val is not sameas false %}
{{        ' ' }}{{ key }}={{ val }}
{%-     endif %}
{%-   endfor %}
{{    ';' }}
{%- endmacro -%}

{%  macro block(block_name, content = none) %}
{%    if block_name is string -%}
{{      block_name }}
{%-   else -%}
{{      block_name | select | join(' ') }}
{%-   endif -%}
{{    ' {' }}
{%    if content %}
{%      filter indent(first = true) %}
{{        content }}
{%      endfilter %}
{%    endif %}
{{    '}' }}
{%- endmacro -%}

{%  macro redirect(host, ssl = true, permanent = true, uri = '$request_uri') %}
{%    set url %}
{{      ssl | ternary('https', 'http') }}://{{ host ~ uri }}
{%-   endset %}
{{    directive('return', [permanent | ternary(301, 302), url]) }}
{%- endmacro -%}

{%  macro map_block(_map) %}
{%    set special %}
{%      if _map.hostnames | default(false) %}
{{        'hostnames;' }}
{%      endif %}
{%      if _map.volatile | default(false) %}
{{        'volatile;' }}
{%      endif %}
{%      if _map.default | default('') != "" %}
{{        directive('default', _map.default) }}
{%      endif %}
{%-   endset %}
{%    set content %}
{%      if special %}
{{        special }}
{%      endif %}
{%      for key, value in _map.map.iteritems() %}
{{        key ~ ' ' ~ value }};
{%-       if not loop.last %}
{{          '\n' }}
{%-       endif %}
{%      endfor %}
{%-   endset %}
{{    block(['map', _map.string, _map.var], content) }}
{%- endmacro -%}

{%  macro bulk_directives(context) %}
{%    set keywords = ['location', 'locations', 'if', 'ifs', 'maps', 'upstreams'] %}
{%    for dir in context.iterkeys() | difference(keywords) | sort %}
{%      set value = context[dir] %}
{%      if value is mapping %}
{%        if 'args' in value or 'kwargs' in value %}
{{          directive(dir, value.args | default([]), value.kwargs | default({})) }}
{%-       elif ansible_os_family in value %}
{{          directive(dir, value[ansible_os_family]) }}
{%-       else %}
{%          for key, val in value | dictsort %}
{%            if val is not sequence or val is string %}
{%              set val = [val] %}
{%            endif %}
{{            directive(dir, [key] + val) }}
{%-           if not loop.last %}
{{              '\n' }}
{%-           endif %}
{%          endfor %}
{%-       endif %}
{%      elif value is sequence and value[0] is sequence and value[0] is not string %}
{%        for val in value[0] %}
{{          directive(dir, val) }}
{%-         if not loop.last %}
{{            '\n' }}
{%-         endif %}
{%        endfor %}
{%      else %}
{{        directive(dir, value) }}
{%-     endif %}
{%      if not loop.last %}
{{        '\n' }}
{%-     endif %}
{%-   endfor %}
{%  endmacro -%}
